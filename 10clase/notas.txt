Arreglos y Apuntadores (matrices):

*built in

       int data[1000000];

  si quiero cambiar-ver el octavo elemento se escribe:

    data[7]=20;

  para recorrer se empieza desde cero

      for(int i=0; i<n; ++i)

  en una funcion

      double mean(const double[], int size);

*array c++11

       #include <array>
       std::array<int, 1000000>;
       data[7]=20;

*vectors 

	#include <vector>
	std::vector<int> data("tamaño");
	data.resize(1000000);
	data[7]=20;

  en una funcion

     	double mean(const std::vector<double> &a); // por referencia, sino
	crea una copia.

Memoria:

array y built-in usan la memoria en el stack, pues se les tiene que dar un
tamaño, mientras que vector puede usar el heap en la memoria, si se le pide al
usuario que de el tamaño, pues posee memoria dinamica.
